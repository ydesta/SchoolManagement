@using PagedList;
@using PagedList.Mvc;

@model IPagedList<SchoolLatestProject.Models.Student >
<link href="~/Content/jquery-ui-1.10.4.custom.min.css" rel="stylesheet" />
<script src="~/Content/jquery-ui-1.10.4.custom.min.js"></script>
<script src="~/Content/jquery-1.10.2.js"></script>
<script type="text/javascript">
    $(function () {
        $("#txtFirstName").autocomplete({
source:'@Url.Action("GetStudents")'
        });
    });
</script>
@{   
    Layout = "~/Views/Shared/SchoolLayout.cshtml";
}

<div class="col-md-6 col-sm-6 col-6">
    <div class="btn-group">
        <button id="addRow" class="btn btn-info">
            @Html.ActionLink("Add New", "Create") <i class="glyphicon glyphicon-plus"></i>
        </button>
    </div>
</div>
@using (Html.BeginForm("Index", "Students", FormMethod.Get))
{ <p>
    
       <b>Find by First Name:</b>  @Html.TextBox("SearchString", null, new {id="txtFirstName" }) <input type="submit" value="Search"  />
    
       
    </p>
}
<div class="form-group" style="margin-top:70px">
    <div class="panel panel-info">
        <div class="panel-heading" style="font-size:16px;margin-left:25px"><strong><span></span> All Student Information</strong></div>
        <div class="panel-body">
            <div class="form-horizontal col-sm-12">

                <table class="table table-striped table-bordered table-hover table-checkable order-column valign-middle" style="font-size:12px">
                    <tr>                        
                        <th>
                          @Html.ActionLink("Full Name","Index",new { sortBy= ViewBag.SortNameParm , SearchString = Request["SearchString"] })
                        </th>
                        
                        <th>
                            @Html.ActionLink("Gender","Index",new { sortBy= ViewBag.SortGenderParm, SearchString = Request["SearchString"] })
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Grade)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Section)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().Telephone)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.First().ParentFirstName)
                        </th>                        
                        <th>
                            @Html.DisplayNameFor(model => model.First().ParentTelephone)
                        </th>

                        <th>Action</th>
                    </tr>
                    @if(Model.Count() == 0)
                    {
                        <tr>
                         <td colspan="8">No data match Search Criteria</td>
                    </tr>
                        
                    }
                    else
                    {
                        foreach (var item in Model)
                        {
                            <tr>

                                <td>
                                    @Html.DisplayFor(modelItem => item.FirstName)
                                    @Html.DisplayFor(modelItem => item.MiddleName)
                                    @Html.DisplayFor(modelItem => item.LastName)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.Gender)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Grade)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Section)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Telephone)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ParentFirstName)
                                    @Html.DisplayFor(modelItem => item.ParentmiddleName)
                                    @Html.DisplayFor(modelItem => item.ParentLastName)
                                </td>

                                <td>
                                    @Html.DisplayFor(modelItem => item.ParentTelephone)
                                </td>

                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.StudentID }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.StudentID }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.StudentID })
                                </td>
                            </tr>
                        }
                    }
                   

                </table>
                <div style="margin-left:840px">
                    @Html.PagedListPager(Model, page => Url.Action("Index",
               new { page, SearchString = Request["SearchString"], sortBy = Request["sortBy"] }),
               new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded,
                   DisplayPageCountAndCurrentLocation = true,DisplayItemSliceAndTotal=true
               })
                </div>

            </div>
        </div>
    </div>
</div>


